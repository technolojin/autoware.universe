@startuml

title Architecture Diagram {{ name }}

skinparam componentStyle rectangle
left to right direction

<style>
port{FontSize 9}
arrow{
    FontSize 5
    Fontcolor #000066
}
node {BackgroundColor #dddddd}
</style>

{% macro build_instance_graph(instance) -%}
    {% if instance.element_type == "module" -%}
    node {{ instance.name }} as {{ instance.id }} {
        {# PORTS #}
        {% for in_port in instance.in_ports -%}
            portin "input/{{ in_port.name }}" as {{ in_port.id }}
            interface "{{in_port.event.name}}\n #{{in_port.event.type}}\n @{{in_port.event.period}}" as {{ in_port.event.id }}
        {% endfor -%}
        {% for out_port in instance.out_ports -%}
            portout "output/{{ out_port.name }}" as {{ out_port.id }}
            interface "{{out_port.event.name}}\n #{{out_port.event.type}}\n @{{out_port.event.period}}" as {{ out_port.event.id }}
        {% endfor -%}
    }
    {% for out_port in instance.out_ports -%}
        note as {{ out_port.id }}_note
            {{ "/" + "/".join(out_port.topic) }}
            {{ out_port.msg_type }}
        end note
        {{ out_port.id }}_note -d- {{ out_port.id }}
    {% endfor -%}
    {% elif instance.element_type == "pipeline" -%}
    frame {{ instance.name }} as {{ instance.id }} {
        {% for child in instance.children -%}
            {{ build_instance_graph(child) }}
        {% endfor -%}
        {% for in_port in instance.in_ports -%}
            portin "input/{{ in_port.name }}" as {{ in_port.id }}
        {% endfor -%}
        {% for out_port in instance.out_ports -%}
            portout "output/{{ out_port.name }}" as {{ out_port.id }}
        {% endfor -%}
        {% for link in instance.links -%}
            {{ link.from_port.id }} -d-> {{ link.to_port.id }}
        {% endfor -%}
    }
    {% endif -%}
{% endmacro -%}

{% macro build_logic_graph(instance) -%}
    {% if instance.element_type == "module" -%}
    node {{ instance.name }} as {{ instance.id }} {
        {# PORTS #}
        {% for in_port in instance.in_ports -%}
            {{ in_port.id }} -d- {{ in_port.event.id }}
        {% endfor -%}
        {% for out_port in instance.out_ports -%}
            {{ out_port.event.id }} -d- {{ out_port.id }}
        {% endfor -%}
        {# EVENTS #}
        {% for event in instance.events -%}
            action "{{event.name}}\n #{{event.type}}\n @{{event.period}}" as {{ event.id }}
            {% for event_trigger in event.triggers -%}
                {{ event_trigger.id }} -d-> {{ event.id }}
            {% endfor -%}
        {% endfor -%}
        {% for out_port in instance.out_ports -%}
            {% for output_trigger in out_port.event.triggers -%}
                {{ output_trigger.id }} -d-> {{ out_port.event.id }}
            {% endfor -%}
        {% endfor -%}
        {% for in_port in instance.in_ports -%}
            {% for input_trigger in in_port.event.triggers -%}
                {{ input_trigger.id }} ...> {{ in_port.event.id }}
            {% endfor -%}
        {% endfor -%}
    }
    {% elif instance.element_type == "pipeline" -%}
    frame {{ instance.name }} as {{ instance.id }} {
        {% for child in instance.children -%}
            {{ build_logic_graph(child) }}
        {% endfor -%}
    }
    {% endif -%}
{% endmacro -%}


{# instances #}
{% for child in children -%}
folder "{{ child.namespace[0] }}" {
    {{ build_instance_graph(child) }}
}
{% endfor %}

{# links #}
{% for link in links -%}
{{ link.from_port.id }} --d--> {{ link.to_port.id }}
{% endfor %}

{# events #}
{% for child in children -%}
folder "{{ child.namespace[0] }}" {
    {{ build_logic_graph(child) }}
}
{% endfor %}

@enduml
